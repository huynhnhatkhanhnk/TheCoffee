/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Admin
 */
public class ThanhVien extends javax.swing.JPanel {

    /**
     * Creates new form ThanhVien
     */
     Connection con;
    ResultSet rs;
    PreparedStatement ps;
    DefaultTableModel tblModel;
    Vector row;
    Helper.DBHelper db = new Helper.DBHelper();
    public ThanhVien() {
        initComponents();

       btnResetActionPerformed(null);
        tblModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }
        };
        tblModel.addColumn("Mã thẻ");
        tblModel.addColumn("Số CMND");
        tblModel.addColumn("Họ và Tên");
        tblModel.addColumn("Ngày đăng ký");
        tblModel.addColumn("SĐT");
        tblModel.addColumn("Email");
        tblModel.addColumn("Số ly");
        tblModel.addColumn("Chiết khấu");
        tblCus.setModel(tblModel);
        ReloadTable();
//        RdOffActionPerformed(null);
    }
    
    
        private void ReloadTable() {
        con = db.getCon();
        tblModel.getDataVector().removeAllElements();
        try {
            ps = con.prepareStatement("select * from Customer order by IDCus DESC");
            rs = ps.executeQuery();
            while (rs.next()) {
                row = new Vector();
                row.add(rs.getString(1));
                row.add(rs.getString(2));
                row.add(rs.getString(3));
                row.add(rs.getString(4));
                row.add(rs.getString(5));
                row.add(rs.getString(6));
                row.add(rs.getString(7));
                row.add(rs.getString(8));
                tblModel.addRow(row);
            }
            tblCus.setModel(tblModel);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Lỗi 101:: Không thể kết nối đến máy chủ");
        }
        lbSL.setText("(" + tblCus.getRowCount() + " thành viên)");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCus = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCMND = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        lbSL = new javax.swing.JLabel();
        pnInfomation = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lbID = new javax.swing.JLabel();
        lbDate = new javax.swing.JLabel();
        lbDis = new javax.swing.JLabel();
        lbQuantity = new javax.swing.JLabel();
        lbLoiEmail = new javax.swing.JLabel();
        lbLoiSDT = new javax.swing.JLabel();
        lbLoiName = new javax.swing.JLabel();
        lbLoiCMND = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(128, 128, 131));
        jPanel1.setPreferredSize(new java.awt.Dimension(900, 620));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Thông Tin Thành Viên");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 250, 40));

        jLabel5.setBackground(new java.awt.Color(153, 153, 153));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 153, 153));
        jLabel5.setText("Họ và Tên :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, 40));

        jLabel6.setBackground(new java.awt.Color(153, 153, 153));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 153, 153));
        jLabel6.setText("Số điện thoại :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 110, 40));

        tblCus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblCus.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblCus);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(392, 50, 470, 480));

        jLabel7.setBackground(new java.awt.Color(153, 153, 153));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 153, 153));
        jLabel7.setText("Email :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 90, 40));

        jLabel8.setBackground(new java.awt.Color(153, 153, 153));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 153, 153));
        jLabel8.setText("Thẻ Căn Cước/CMND :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 150, 40));

        txtCMND.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtCMND, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 200, -1));

        txtName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 200, -1));

        txtEmail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, 200, -1));

        txtPhone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });
        jPanel1.add(txtPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 200, -1));

        lbSL.setText("0 Thành Viên");
        jPanel1.add(lbSL, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 10, 70, -1));

        pnInfomation.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Mã thẻ:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Ngày đăng ký:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Số ly đã dùng:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("Chiết khấu:");

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        jLabel18.setText("Thông tin thêm:");

        lbID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbID.setForeground(new java.awt.Color(255, 0, 0));
        lbID.setText("trống");

        lbDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbDate.setForeground(new java.awt.Color(255, 0, 0));
        lbDate.setText("trống");

        lbDis.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbDis.setForeground(new java.awt.Color(255, 0, 0));
        lbDis.setText("trống");

        lbQuantity.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbQuantity.setForeground(new java.awt.Color(255, 0, 0));
        lbQuantity.setText("trống");

        javax.swing.GroupLayout pnInfomationLayout = new javax.swing.GroupLayout(pnInfomation);
        pnInfomation.setLayout(pnInfomationLayout);
        pnInfomationLayout.setHorizontalGroup(
            pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnInfomationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnInfomationLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbQuantity))
                    .addGroup(pnInfomationLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbDis))
                    .addComponent(jLabel18)
                    .addGroup(pnInfomationLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbID))
                    .addGroup(pnInfomationLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbDate)))
                .addContainerGap(256, Short.MAX_VALUE))
        );
        pnInfomationLayout.setVerticalGroup(
            pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnInfomationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lbID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lbDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(lbQuantity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnInfomationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(lbDis))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(pnInfomation, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 370, 400, -1));

        lbLoiEmail.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbLoiEmail.setForeground(new java.awt.Color(255, 51, 51));
        jPanel1.add(lbLoiEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, -1, -1));

        lbLoiSDT.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbLoiSDT.setForeground(new java.awt.Color(255, 51, 51));
        jPanel1.add(lbLoiSDT, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, -1, -1));

        lbLoiName.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbLoiName.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(lbLoiName, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, -1, -1));

        lbLoiCMND.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbLoiCMND.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(lbLoiCMND, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, -1, -1));

        btnAdd.setBackground(new java.awt.Color(153, 255, 255));
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, -1, -1));

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdate.setText("Cập nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 320, -1, -1));

        btnDel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDel.setText("Xóa");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        jPanel1.add(btnDel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 320, -1, -1));

        btnReset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnReset.setText("Làm mới");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jPanel1.add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 320, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 862, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        while (true) {
            if (txtCMND.getText().trim().equals("")) {
                lbLoiCMND.setText("Số thẻ căn cước/CMND không được bỏ trống.");
                txtCMND.grabFocus();
                return;
            } else if (!txtCMND.getText().trim().matches("[0-9]+") || txtCMND.getText().trim().length() > 12 || txtCMND.getText().trim().length() < 9) {
                lbLoiCMND.setText("Số thẻ căn cước/CMND gồm 9-12 số.");
                txtCMND.grabFocus();
                return;
            } else {
                lbLoiCMND.setText("");
                break;
            }
        }
        try {
            ps = con.prepareStatement("select * from Customer where IdentityCard=?");
            ps.setString(1, txtCMND.getText());
            rs = ps.executeQuery();
            if (rs.next()) {
                lbLoiCMND.setText("");
                lbLoiName.setText("");
                lbLoiSDT.setText("");
                lbLoiEmail.setText("");
                txtName.setEnabled(false);
                txtCMND.setEnabled(false);
                txtPhone.setEnabled(true);
                txtEmail.setEnabled(true);
                txtCMND.setText(rs.getString(2));
                txtName.setText(rs.getString(3));
                txtPhone.setText(rs.getString(5));
                txtEmail.setText(rs.getString(6));

                lbID.setText(rs.getString(1));
                lbDate.setText(rs.getString(4));
                lbQuantity.setText(rs.getString(7) + " ly");
                lbDis.setText(rs.getString(8) + "%");

                btnAdd.setEnabled(false);
                btnUpdate.setEnabled(true);
                btnDel.setEnabled(true);
                pnInfomation.setVisible(true);
            } else {
                txtCMND.setEnabled(true);
                txtName.setEnabled(true);
                txtPhone.setEnabled(true);
                txtEmail.setEnabled(true);
                String Name = txtName.getText().replaceAll("\\s+", " ");
                while (true) {
                    if (txtName.getText().trim().equals("")) {
                        lbLoiName.setText("Họ và tên không được bỏ trống.");
                        txtName.grabFocus();
                        return;
                    } else if (Name.length() > 30) {
                        lbLoiName.setText("Họ và tên chứa tối đa 30 kí tự.");
                        txtName.grabFocus();
                        return;
                    } else {
                        lbLoiName.setText("");
                        break;
                    }
                }
                while (true) {
                    if (txtPhone.getText().trim().equals("")) {
                        lbLoiSDT.setText("SĐT không được bỏ trống.");
                        txtPhone.grabFocus();
                        return;
                    } else if (txtPhone.getText().trim().length() > 11 || txtPhone.getText().trim().length() < 10) {
                        lbLoiSDT.setText("SĐT chứa từ 10-11 số.");
                        txtPhone.grabFocus();
                        return;
                    } else if (!txtPhone.getText().trim().matches("0[1-9]{1}\\d{8,9}")) {
                        lbLoiSDT.setText("SĐT chưa đúng định dạng.");
                        txtPhone.grabFocus();
                        return;
                    } else {
                        lbLoiSDT.setText("");
                        break;
                    }
                }
                while (true) {
                    if (txtEmail.getText().trim().equals("")) {
                        lbLoiEmail.setText("Email không được bỏ trống.");
                        txtEmail.grabFocus();
                        return;
                    } else if (!txtEmail.getText().trim().matches("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@" + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$")) {
                        lbLoiEmail.setText("Email chưa đúng định dạng.");
                        txtEmail.grabFocus();
                        return;
                    } else {
                        lbLoiEmail.setText("");
                        break;
                    }
                }
                ps = con.prepareStatement("Insert into Customer values(?,?,convert(varchar(20),getdate(),103),?,?,?,?)");
                ps.setString(1, txtCMND.getText().trim());
                ps.setString(2, Name);
                ps.setString(3, txtPhone.getText().trim());
                ps.setString(4, txtEmail.getText().trim());
                ps.setInt(5, 0);
                ps.setInt(6, 0);
                if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Thêm thành viên thành công.");
                    btnAddActionPerformed(evt);
                } else {
                    JOptionPane.showMessageDialog(null, "Thêm thành viên thất bại.");
                }
                ReloadTable();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Lỗi 101:: Không thể kết nối đến máy chủ");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        while (true) {
            if (txtPhone.getText().trim().equals("")) {
                lbLoiSDT.setText("SĐT không được bỏ trống.");
                txtPhone.grabFocus();
                return;
            } else if (txtPhone.getText().trim().length() > 11 || txtPhone.getText().trim().length() < 10) {
                lbLoiSDT.setText("SĐT chứa từ 10-11 số.");
                txtPhone.grabFocus();
                return;
            } else if (!txtPhone.getText().trim().matches("0[1-9]{1}\\d{8,9}")) {
                lbLoiSDT.setText("SĐT chưa đúng định dạng.");
                txtPhone.grabFocus();
                return;
            } else {
                lbLoiSDT.setText("");
                break;
            }
        }
        while (true) {
            if (txtEmail.getText().trim().equals("")) {
                lbLoiEmail.setText("Email không được bỏ trống.");
                txtEmail.grabFocus();
                return;
            } else if (!txtEmail.getText().trim().matches("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@" + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$")) {
                lbLoiEmail.setText("Email chưa đúng định dạng.");
                txtEmail.grabFocus();
                return;
            } else {
                lbLoiEmail.setText("");
                break;
            }
        }
        try {
            ps = con.prepareStatement("Update Customer set Phone=?,Email=? where IDCus=?");
            ps.setString(1, txtPhone.getText().trim());
            ps.setString(2, txtEmail.getText().trim());
            ps.setString(3, lbID.getText());
            if (ps.executeUpdate() > 0) {
                JOptionPane.showMessageDialog(null, "Cập nhật thành viên thành công.");
                txtCMND.setEnabled(false);
                txtName.setEnabled(false);
                txtPhone.setEnabled(true);
                txtEmail.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(null, "Cập nhật thành viên thất bại.");
            }
            ReloadTable();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Lỗi 101:: Không thể kết nối đến máy chủ");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        int click = JOptionPane.showConfirmDialog(null, "Bạn chắc chắn xóa thành viên này?");
        if (click == 0) {
            try {
                ps = con.prepareStatement("Delete from Customer where IDCus=?");
                ps.setString(1, lbID.getText());
                if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Xóa thành viên thành công.");
                    btnResetActionPerformed(evt);
                } else {
                    JOptionPane.showMessageDialog(null, "Xóa thành viên thất bại.");
                }
                ReloadTable();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Lỗi 101:: Không thể kết nối đến máy chủ");
            }
        }
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtCMND.setText("");
        txtName.setText("");
        txtPhone.setText("");
        txtEmail.setText("");
        txtCMND.setEnabled(true);
        txtName.setEnabled(false);
        txtPhone.setEnabled(false);
        txtEmail.setEnabled(false);
        pnInfomation.setVisible(false);
        lbID.setText("trống");
        lbDate.setText("trống");
        lbQuantity.setText("trống");
        lbDis.setText("trống");
        btnAdd.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnDel.setEnabled(false);
        lbLoiCMND.setText("");
        lbLoiName.setText("");
        lbLoiSDT.setText("");
        lbLoiEmail.setText("");
    }//GEN-LAST:event_btnResetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDate;
    private javax.swing.JLabel lbDis;
    private javax.swing.JLabel lbID;
    private javax.swing.JLabel lbLoiCMND;
    private javax.swing.JLabel lbLoiEmail;
    private javax.swing.JLabel lbLoiName;
    private javax.swing.JLabel lbLoiSDT;
    private javax.swing.JLabel lbQuantity;
    private javax.swing.JLabel lbSL;
    private javax.swing.JPanel pnInfomation;
    private javax.swing.JTable tblCus;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
