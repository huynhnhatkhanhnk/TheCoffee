
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import Helper.DBHelper;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manh
 */
public class SanPham extends javax.swing.JPanel {

    /**
     * Creates new form Khachhang
     */
    DefaultTableModel tblModelSP, tblModelLoaiSP;
    DefaultComboBoxModel cbModelSP, cbModelLoaiSP;
    Connection conSP, conLoaiSP;
    ResultSet rsSP, rsLoaiSP, rsIDPr, rsTen, rsTK, rsAdd1;
    DBHelper db = new DBHelper();
    PreparedStatement psSP, psLoaiSP, psSP1, psTen, psTK, psAdd1, psAdd2;
    Vector rowSP, rowLoaiSP, vecTK, vecTen, rowTen;
    private int[] sponsorIndexArr;

    public SanPham() {
        initComponents();
        conSP = db.getCon(); // kết nối với database
        conLoaiSP = db.getCon();
        tblSP.getTableHeader().setBackground(new Color(0, 0, 0, 0));
        // Tạo Tên cho bản table
         tblModelSP = new DefaultTableModel();
        tblModelSP.addColumn("ID");
        tblModelSP.addColumn("Tên");
        tblModelSP.addColumn("Loại");
        tblModelSP.addColumn("Giá");
        tblModelSP.addColumn("Kích cỡ");
        tblSP.setModel(tblModelSP);
           loadDataSP();

    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtNameproduct = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtIDProduct = new javax.swing.JTextField();
        them = new javax.swing.JPanel();
        btnAddSP = new javax.swing.JLabel();
        sua = new javax.swing.JPanel();
        btnDeleteSP = new javax.swing.JLabel();
        xoa = new javax.swing.JPanel();
        btnUpdateSP = new javax.swing.JLabel();
        lammoi3 = new javax.swing.JPanel();
        RestFrom = new javax.swing.JLabel();
        cbNameType = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSP = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cbKichCo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(850, 540));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(128, 128, 131));
        jPanel1.setPreferredSize(new java.awt.Dimension(900, 620));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNameproduct.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 0, 0)));
        txtNameproduct.setCaretColor(new java.awt.Color(255, 255, 255));
        txtNameproduct.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtNameproduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameproductActionPerformed(evt);
            }
        });
        txtNameproduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameproductKeyPressed(evt);
            }
        });
        jPanel1.add(txtNameproduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, 260, 30));

        jLabel8.setBackground(new java.awt.Color(153, 153, 153));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 153, 153));
        jLabel8.setText("Tên sản phẩm          :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 140, 40));

        jLabel10.setBackground(new java.awt.Color(153, 153, 153));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 153, 153));
        jLabel10.setText("Kích cỡ                     :");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 150, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Quản lý sản phẩm");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 70));

        jLabel6.setBackground(new java.awt.Color(153, 153, 153));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 153, 153));
        jLabel6.setText("ID sản phẩm            :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 170, 40));

        txtIDProduct.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 0, 0)));
        txtIDProduct.setCaretColor(new java.awt.Color(255, 255, 255));
        txtIDProduct.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtIDProduct.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        txtIDProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDProductActionPerformed(evt);
            }
        });
        txtIDProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDProductKeyPressed(evt);
            }
        });
        jPanel1.add(txtIDProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, 260, 30));

        them.setBackground(new java.awt.Color(0, 0, 0));

        btnAddSP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAddSP.setForeground(new java.awt.Color(255, 255, 255));
        btnAddSP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAddSP.setText("Thêm");
        btnAddSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddSPMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout themLayout = new javax.swing.GroupLayout(them);
        them.setLayout(themLayout);
        themLayout.setHorizontalGroup(
            themLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnAddSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        themLayout.setVerticalGroup(
            themLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnAddSP, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel1.add(them, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 80, 30));

        sua.setBackground(new java.awt.Color(0, 0, 0));

        btnDeleteSP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDeleteSP.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteSP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnDeleteSP.setText("Xóa");
        btnDeleteSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteSPMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout suaLayout = new javax.swing.GroupLayout(sua);
        sua.setLayout(suaLayout);
        suaLayout.setHorizontalGroup(
            suaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnDeleteSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        suaLayout.setVerticalGroup(
            suaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnDeleteSP, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel1.add(sua, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 360, 80, 30));

        xoa.setBackground(new java.awt.Color(0, 0, 0));

        btnUpdateSP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdateSP.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateSP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnUpdateSP.setText("Sửa");
        btnUpdateSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateSPMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout xoaLayout = new javax.swing.GroupLayout(xoa);
        xoa.setLayout(xoaLayout);
        xoaLayout.setHorizontalGroup(
            xoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnUpdateSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        xoaLayout.setVerticalGroup(
            xoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnUpdateSP, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel1.add(xoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, 80, 30));

        lammoi3.setBackground(new java.awt.Color(0, 0, 0));

        RestFrom.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        RestFrom.setForeground(new java.awt.Color(255, 255, 255));
        RestFrom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RestFrom.setText("Làm Mới");
        RestFrom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RestFromMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout lammoi3Layout = new javax.swing.GroupLayout(lammoi3);
        lammoi3.setLayout(lammoi3Layout);
        lammoi3Layout.setHorizontalGroup(
            lammoi3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lammoi3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RestFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        lammoi3Layout.setVerticalGroup(
            lammoi3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(RestFrom, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel1.add(lammoi3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 360, 80, 30));

        cbNameType.setEditable(true);
        cbNameType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbNameType.setBorder(new javax.swing.border.MatteBorder(null));
        cbNameType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNameTypeActionPerformed(evt);
            }
        });
        jPanel1.add(cbNameType, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 100, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 51, 0));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/sanpham.png"))); // NOI18N
        jButton2.setText("Loại sản phẩm");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 450, 180, 60));

        tblSP.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblSP.setFocusable(false);
        tblSP.setGridColor(new java.awt.Color(0, 0, 0));
        tblSP.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblSP.setRowHeight(25);
        tblSP.setShowVerticalLines(false);
        tblSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSPMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSP);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 650, 190));

        jLabel9.setBackground(new java.awt.Color(153, 153, 153));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(153, 153, 153));
        jLabel9.setText("Tên Loại sản phẩm  :");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 140, 40));

        txtPrice.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 0, 0)));
        txtPrice.setCaretColor(new java.awt.Color(255, 255, 255));
        txtPrice.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });
        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPriceKeyPressed(evt);
            }
        });
        jPanel1.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, 260, 30));

        jLabel11.setBackground(new java.awt.Color(153, 153, 153));
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(153, 153, 153));
        jLabel11.setText("Giá sản phẩm          :");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 150, 40));

        cbKichCo.setEditable(true);
        cbKichCo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lớn", "Vừa", "Nhỏ" }));
        jPanel1.add(cbKichCo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 100, -1));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hinhanh/caphemenu2.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, 420, 350));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDProductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDProductActionPerformed

    private void txtIDProductKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDProductKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDProductKeyPressed

    private void txtNameproductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameproductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameproductActionPerformed

    private void txtNameproductKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameproductKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameproductKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        Theloaisanpham tl = new Theloaisanpham();
        tl.setVisible(true);
        tl.pack();
        tl.setLocationRelativeTo(null);
        tl.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);


    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void txtPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceKeyPressed

    private void btnAddSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddSPMouseClicked
        // TODO add your handling code here:
        
        int click = JOptionPane.showConfirmDialog(null, "Bạn có muốn thêm sản phẩm không?");
        if (click == 0) {
            try {
                psAdd1 = conLoaiSP.prepareStatement("select * from ProductType where TypeName=? and Size=?");
                psAdd1.setString(1, (String) cbNameType.getSelectedItem());
                psAdd1.setString(2, (String) cbKichCo.getSelectedItem());
                rsAdd1 = psAdd1.executeQuery();
                if (rsAdd1.next()) { 
                    ValidateADD();
                     int line1 = tblSP.getRowCount();
                    while (true) {
                        String sql3 = "select * from ProductType where TypeName=? and Size=?";
                        String Loaisp, Size, IDType;
                        psSP = conSP.prepareStatement(sql3);
                        psSP.setString(1, (String) cbNameType.getSelectedItem());
                        psSP.setString(2, (String) cbKichCo.getSelectedItem());
                        rsSP = psSP.executeQuery();
                        if (rsSP.next()) {
                            IDType = rsSP.getString(1);
                            for (int i = 0; i < line1; i++) {
                                if (txtNameproduct.getText().equals(tblSP.getValueAt(i, 1)) && tblSP.getValueAt(i, 2).equals(IDType) && cbKichCo.getSelectedItem().equals(tblSP.getValueAt(i, 4))) {
                                    JOptionPane.showMessageDialog(null, "Sản phẩm Đã tồn tại");
                                    return;
                                }
                            }
                            break;
                        }
                    }

                    String sql = "insert into Product values(?,?,?,?)";
                    psAdd2 = conSP.prepareStatement(sql);
                    psAdd2.setString(1, txtIDProduct.getText());
                    psAdd2.setString( 2, txtNameproduct.getText());
                    psAdd2.setString(3, rsAdd1.getString("IDType"));//cbBox
                    psAdd2.setInt(4, Integer.parseInt(txtPrice.getText()));//kieu int
                    psAdd2.executeUpdate();
                    tblModelSP.getDataVector().removeAllElements();
                    loadDataSP();
                  //  btnResetActionPerformed(null);
                    JOptionPane.showMessageDialog(null, "Thêm sản phẩm thành công");
                } else {
                    JOptionPane.showMessageDialog(null, "Không tìm thấy nhóm sản phẩm.");
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }

    }//GEN-LAST:event_btnAddSPMouseClicked

    private void cbNameTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNameTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNameTypeActionPerformed

    private void tblSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSPMouseClicked
 String DepName = null;
        btnDeleteSP.setEnabled(true);
        btnUpdateSP.setEnabled(true);
        btnAddSP.setEnabled(false);
        int line = tblSP.getSelectedRow();
        String ID = (String) tblModelSP.getValueAt(line, 0);
        String Name = (String) tblModelSP.getValueAt(line, 1);
        String Type = (String) tblModelSP.getValueAt(line, 2);
        String Price = (String) tblModelSP.getValueAt(line, 3);
        String Size = (String) tblModelSP.getValueAt(line, 4);
        //gan du lieu vao textfile
        txtIDProduct.setText(ID);
        txtNameproduct.setText(Name);
        try {
            String sql = "select * from ProductType where IDType=?";
            psSP = conSP.prepareStatement(sql);
            psSP.setString(1, Type);
            rsSP = psSP.executeQuery();
            if (rsSP.next()) {
                DepName = rsSP.getString(2);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        cbNameType.setSelectedItem(DepName);
//        cbNameType.setSelectedItem(Type);
        txtPrice.setText(Price);
        cbKichCo.setSelectedItem(Size);
        txtIDProduct.setEnabled(false);

    }//GEN-LAST:event_tblSPMouseClicked

    private void RestFromMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RestFromMouseClicked
   // TODO add your handling code here:
        txtIDProduct.setText("");
        txtNameproduct.setText("");
        txtPrice.setText("");
        cbNameType.setSelectedIndex(0);//re set combobox
        cbKichCo.setSelectedIndex(0);//re set combobox
        txtIDProduct.setEnabled(true);
        btnDeleteSP.setEnabled(false);
        btnUpdateSP.setEnabled(false);
        btnAddSP.setEnabled(true);
       // cbChonTimKiem.setSelectedIndex(0);
        // cbChonTimKiem.setSelectedIndex(0);
    }//GEN-LAST:event_RestFromMouseClicked

    private void btnUpdateSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateSPMouseClicked
        // TODO add your handling code here:
 int a = JOptionPane.showConfirmDialog(null, "Bạn có muốn sửa sản phẩm không?");
        if (a == 0) {

            try {
                String sql2 = "select * from ProductType where TypeName=? and Size=?";
                psLoaiSP = conSP.prepareStatement(sql2);
                psLoaiSP.setString(1, (String) cbNameType.getSelectedItem());
                psLoaiSP.setString(2, (String) cbKichCo.getSelectedItem());
                rsLoaiSP = psLoaiSP.executeQuery();
                if (rsLoaiSP.next()) {
                    String sql = "update Product set ProductName=?, IDType=?, Price=? where IDProduct=?";
                    psSP = conSP.prepareStatement(sql);
                    psSP.setString(1, txtNameproduct.getText());
                    psSP.setString(2, rsLoaiSP.getString(1));//cbBox
                    psSP.setInt(3, Integer.parseInt(txtPrice.getText()));//kieu int
                    psSP.setString(4, txtIDProduct.getText());
                    psSP.executeUpdate();
                    tblModelSP.getDataVector().removeAllElements();
                    loadDataSP();
                  //  btnResetActionPerformed(null);
                    JOptionPane.showMessageDialog(null, "Sửa sản phẩm thành công");
                } else {
                    JOptionPane.showMessageDialog(null, "Không tìm thấy nhóm sản phẩm.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }

    }//GEN-LAST:event_btnUpdateSPMouseClicked

    private void btnDeleteSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteSPMouseClicked
        // TODO add your handling code here:
        int de = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa sản phẩm không?");
        if (de == 0) {
            try {
                String sql1 = "select * from OrderDetails where IDProduct=?";
                psSP = conSP.prepareStatement(sql1);
                psSP.setString(1, txtIDProduct.getText());
                rsIDPr = psSP.executeQuery();
                if (rsIDPr.next()) {
                    JOptionPane.showMessageDialog(null, "Sản phẩm đã có đơn hàng, không thể xóa sản phẩm.");
                } else {
                    try {
                        String sql = "Delete Product where IDProduct=?";
                        psSP = conSP.prepareStatement(sql);
                        psSP.setString(1, txtIDProduct.getText());
                        psSP.executeUpdate();
                        tblModelSP.getDataVector().removeAllElements();
                        loadDataSP();
                      //  btnResetActionPerformed(null);
                        JOptionPane.showMessageDialog(null, "Xóa sản phẩm thành công.");
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                }
            } catch (SQLException e) {
            }

        }

    }//GEN-LAST:event_btnDeleteSPMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel RestFrom;
    private javax.swing.JLabel btnAddSP;
    private javax.swing.JLabel btnDeleteSP;
    private javax.swing.JLabel btnUpdateSP;
    private javax.swing.JComboBox<String> cbKichCo;
    private javax.swing.JComboBox<String> cbNameType;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel lammoi3;
    private javax.swing.JPanel sua;
    private javax.swing.JTable tblSP;
    private javax.swing.JPanel them;
    public static javax.swing.JTextField txtIDProduct;
    public static javax.swing.JTextField txtNameproduct;
    public static javax.swing.JTextField txtPrice;
    private javax.swing.JPanel xoa;
    // End of variables declaration//GEN-END:variables
 private void loadDataSP() {
        try {
            String sql = "select * from Product inner join ProductType on Product.IDType=ProductType.IDType";
            psSP = conSP.prepareStatement(sql);
            rsSP = psSP.executeQuery();
            while (rsSP.next()) {
                rowSP = new Vector();
                rowSP.add(rsSP.getString("IDProduct"));
                rowSP.add(rsSP.getString("ProductName"));
                rowSP.add(rsSP.getString("IDType"));
                rowSP.add(rsSP.getString("Price"));
                rowSP.add(rsSP.getString("Size"));
                tblModelSP.addRow(rowSP);
            }
            tblSP.setModel(tblModelSP);
        } catch (Exception e) {
        }
        cbNameType.removeAllItems();
        try {
            String sql = "select DISTINCT TypeName from  ProductType";
            psSP = conSP.prepareStatement(sql);
            rsSP = psSP.executeQuery();
            while (rsSP.next()) {
                cbNameType.addItem(rsSP.getString(1));
            }
        } catch (Exception e) {
        }
 
  }
private  void ValidateADD(){
     int line = tblModelSP.getRowCount();// Tìm  ID giống nhau
     while (true) {
                        for (int i = 0; i < line; i++) {
                            if (txtIDProduct.getText().trim().equals(tblModelSP.getValueAt(i, 0))) {
                                JOptionPane.showMessageDialog(this, "ID sản phẩm trùng");
                                txtIDProduct.grabFocus();
                                return;
                            }
                        }

                        if (txtIDProduct.getText().trim().equals("")) {
                            JOptionPane.showMessageDialog(this, "ID không được để trống");
                            txtIDProduct.grabFocus();
                            return;
                        } else if (!txtIDProduct.getText().trim().matches("[A-Za-z]{2}\\d{2,2}")) {
                            JOptionPane.showMessageDialog(this, "ID phải bắt đầu bằng 2 chữ và 2 số ");
                            txtIDProduct.grabFocus();
                            return;
                        } else {
                            break;
                        }
                    }

                    while (true) {
                        if (txtNameproduct.getText().trim().equals("")) {
                            JOptionPane.showMessageDialog(this, "Tên không được để trống");
                            txtNameproduct.grabFocus();
                            return;
                        } else {
                            break;
                        }
                    }
                    while (true) {
                        if (txtPrice.getText().trim().equals("")) {
                            JOptionPane.showMessageDialog(this, "Giá không được để trống");
                            txtPrice.grabFocus();
                            return;
                        } else if (!txtPrice.getText().trim().matches("[0-9]+")) {
                            JOptionPane.showMessageDialog(this, "Giá phải là số và lớn hơn 0");
                            txtPrice.grabFocus();
                            return;
                        } else if ((Integer.parseInt(txtPrice.getText())) <= 0 || Integer.parseInt(txtPrice.getText()) > 200000) {
                            JOptionPane.showMessageDialog(this, "Giá phải lớn hơn 0 và nhỏ hơn 200.000");
                            txtPrice.grabFocus();
                            return;
                        } else {
                            break;
                        }
                    }
                   
}
}
